@inherits LayoutComponentBase
@using System.Security.Claims;
@using TheradexPortal.Data.Static;
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <Layout Style="background-image: url('img/Exploration_Pattern2_Bold.jpg'); background-size:cover;">
                <LayoutHeader>
                    <Bar Background="Background.Light">
                        <BarBrand>
                            <Figure>
                                <FigureImage Class="max-h-10" Source="img/theradex-logo.png" AlternateText="Theradex Oncology" />
                            </Figure>
                        </BarBrand>
                        <BarEnd>
                            <BarItem>
                                <BarLink To="#Notifications">
                                    <Icon Name="IconName.ExclamationCircle" IconSize="IconSize.Large" />
                                </BarLink>
                            </BarItem>
                            <BarItem>
                                <BarLink To="#Notifications">
                                    <Icon Name="IconName.InfoCircle" IconSize="IconSize.Large" />
                                </BarLink>
                            </BarItem>
                            <BarItem>
                                <BarLink To="#Profile">
                                    <Icon Name="IconName.UserCircle" IconSize="IconSize.Large" />
                                </BarLink>
                            </BarItem>
                        </BarEnd>
                    </Bar>
                </LayoutHeader>
                <LayoutContent>
                @if (!this.UserIsRegisterd)
                {
                    <p>
                            Welcome! You're almost there. Please <a href="mailto:wrteam@theradex.com">email</a> the web reporting to complete your registration.
                    </p>
                }
                else
                {
                    @Body
                }
                </LayoutContent>
                <LayoutFooter>
                    <Footer />
                </LayoutFooter>

            </Layout>
        </Authorized>
        <NotAuthorized>
            <RedirectToLogin />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<!--
<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <main>
                <div Class="top-row px-4">
                    <LoginDisplay />
                </div>
                <div class="container-fluid py-3 px-3 px-lg-5">
                    @Body
                </div>
            </main>
        </Authorized>
        <NotAuthorized>
            <RedirectToLogin />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
-->

@code {

    private bool UserIsRegisterd = false;
    public bool UserIsAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider
            .GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            var claims = user.Claims;
            this.UserIsRegisterd = (user.FindFirst(c => c.Type == WRClaimType.IsAdmin)?.Value) is not null;
        }

        await base.OnInitializedAsync();
    }
}
