@inherits LayoutComponentBase
<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
<Layout Style="background-image: url('img/Exploration_Pattern2_Bold.jpg'); background-size:cover;">
    <LayoutHeader>
        <Bar Background="Background.Light">
            <BarBrand>
                <Figure>
                    <FigureImage Class="max-h-10" Source="img/theradex-logo.png" AlternateText="Theradex Oncology" />
                </Figure>
            </BarBrand>
            <BarEnd>
                <BarItem>
                    <BarLink To="#Notifications">
                        <Icon Name="IconName.ExclamationCircle" IconSize="IconSize.Large" />
                    </BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="#Notifications">
                        <Icon Name="IconName.InfoCircle" IconSize="IconSize.Large" />
                    </BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="#Profile">
                        <Icon Name="IconName.UserCircle" IconSize="IconSize.Large" />
                    </BarLink>
                </BarItem>
                <BarItem>
                    <BarLink To="#Profile">
                        <Button Flex="Flex.JustifyContent.Center" Block Color="Color.Secondary" Clicked="@OnSAMLButtonClicked">Sign Out</Button>
                    </BarLink>
                </BarItem>
            </BarEnd>
        </Bar>
    </LayoutHeader>
    <LayoutContent>
        @Body
    </LayoutContent>
    <LayoutFooter>
        <Footer />
    </LayoutFooter>

</Layout>
    </Authorized>
        <NotAuthorized>
            <TheradexPortal.Pages.Public.Landing />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@inject AuthenticationStateProvider AuthState
@code {

    [Inject] public NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthState.GetAuthenticationStateAsync();
        var username = state.User.Identity.Name;

        await base.OnInitializedAsync();
    }

    Task OnSAMLButtonClicked()
    {
        Navigation.NavigateTo($"Logout", true);

        return Task.CompletedTask;
    }
}