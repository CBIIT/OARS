@using Amazon;
@using Amazon.S3;
@using Amazon.S3.Transfer;
@using Microsoft.Extensions.Options;
@using TheradexPortal.Data.Models.Configuration;
@using TheradexPortal.Data.Services.Abstract;

<Modal @ref="helpModal">
    <ModalContent Size="ModalSize.ExtraLarge">
        <ModalHeader Background="Background.Primary">
            <ModalTitle TextColor="TextColor.White">Dashboard Help</ModalTitle>
            <CloseButton TextColor="TextColor.White"></CloseButton>
        </ModalHeader>
        <ModalBody Class="overview-Modal-Body">
            <embed src="@helpFileName" />
        </ModalBody>
    </ModalContent>
</Modal>

@code {
    [Parameter] public int DashboardId { get; set; }
    [Inject] private IDashboardService dashboardService { get; set; } = null!;
    private Modal? helpModal;
    private string helpFileName;

    public DashboardHelp()
    {
        this.helpFileName = string.Empty;
    }

    public async Task ShowHelp()
    {
        await this.showModal();
    }

    public async Task RetrievePdfUrl()
    {
        this.helpFileName = await dashboardService.GetDashboardPdfUrl(DashboardId);
    }

    private async Task showModal()
    {
        if (this.helpFileName == null || this.helpFileName.Equals(string.Empty))
        {
            await this.RetrievePdfUrl();
        }

        StateHasChanged();
        await helpModal!.Show();
    }
}
