@using TheradexPortal.Data.Models;
@using TheradexPortal.Data.Services;
@using TheradexPortal.Data;
@using TheradexPortal.Data.Services.Abstract;
@using TheradexPortal.Data.Static;
@using Microsoft.AspNetCore.Http; 
@inject IHttpContextAccessor httpContextAccessor

<BarItem>
    <BarLink Match="Match.Prefix" To="/studies">
        @if (RenderButtons)
        {
            <Button Color="Color.Primary" TextWeight="TextWeight.Bold" Outline Class="text-nowrap">My Studies</Button>
        }
        else
        {
            <Span>My Studies</Span>
        }
    </BarLink>
</BarItem>

@foreach(var dashboard in dashboards)
{
    <BarItem>
        <BarLink Match="Match.Prefix" To="@GetLink(dashboard)">
            @if (RenderButtons)
            {
                <Button Color="Color.Primary" TextWeight="TextWeight.Bold" Outline Class="text-nowrap">@dashboard.Name</Button>
            }
            else
            {
                <Span>@dashboard.Name</Span>
            }
        </BarLink>
    </BarItem>
}

@code {
    [Parameter] public bool RenderButtons { get; set; } = false;
    [Inject] private IDashboardService dashboardService { get; set; } = null!;

    private IList<Dashboard> dashboards = new List<Dashboard>();

    protected override async Task OnInitializedAsync()
    {
        bool isAdmin = httpContextAccessor.HttpContext.User.HasClaim(WRClaimType.Role, "Administrator");
        int userId = Convert.ToInt32(httpContextAccessor.HttpContext.User.FindFirst(WRClaimType.UserId).Value);

        dashboards = await dashboardService.GetDashboardsForUserAsync(userId, isAdmin);
        Console.WriteLine(dashboards);
    }

    protected string GetLink(Dashboard dashboard)
    {
        if(dashboard.CustomPagePath != null)
        {
            return dashboard.CustomPagePath;
        }
        else
        {
            return $"{WrConstants.DASHBOARD_PAGE_PATH}/{dashboard.WRDashboardId}";
        }
    }
}
