@using TheradexPortal.Data.Identity;
@using TheradexPortal.Data.Services.Abstract;
@using TheradexPortal.Data.Static;
@using System.Security.Claims;
@inject IHttpContextAccessor httpContextAccessor
@inject IConfiguration configuration

@inherits LayoutComponentBase
@layout AuthLayout

<AuthorizeView Policy="IsAdmin">
    <Authorized>
        <Div Class="nci-main-wrapper" Background="Background.Light">
        <Layout Class="nci-main-layout" Background="Background.Light">
            <LayoutHeader>
                <Bar Breakpoint="Breakpoint.Desktop" NavigationBreakpoint="Breakpoint.Desktop" Style="@GetHeaderColor()" Class="nci-navbar px-4">
                    <BarBrand>
                        <Image Source="img/theradex-logo.png" AlternateText="Theradex Oncology" />
                    </BarBrand>
                    <BarToggler />
                    <BarMenu>
                        <BarEnd>
                            <BarItem Width="Width.Max100" Class="pe-4">
                                <EnvironmentLbl/>
                            </BarItem>
                            <BarItem>
                                <Tooltip Text="Home">
                                    <BarLink To="studies">
                                            <img src="img/home.png" alt="Home" height="@iconHeight" />
                                    </BarLink>
                                </Tooltip>
                            </BarItem>
                            <BarItem>
                                <Tooltip Text="Logout">
                                    <BarLink onclick="@OnButtonClicked">
                                            <img src="img/logout.png" alt="Logout" height="@iconHeight" />
                                    </BarLink>
                                </Tooltip>
                            </BarItem>
                        </BarEnd>
                    </BarMenu>
                </Bar>
            </LayoutHeader>
            <Layout Sider>
                <LayoutSider>
                    <LayoutSiderContent Background="Background.Light">
                        <Div Class="nci-secondary-nav" Background="Background.Light">
                            <Bar Mode="BarMode.VerticalInline"
                                    CollapseMode="BarCollapseMode.Small"
                                    Breakpoint="Breakpoint.Desktop"
                                    NavigationBreakpoint="Breakpoint.Tablet"
                                    ThemeContrast="ThemeContrast.Light">
                                <BarBrand>
                                    <BarItem>
                                        <BarLink To="/admin">
                                            <BarIcon IconName="IconName.Dashboard" />
                                            Admin Home
                                        </BarLink>
                                    </BarItem>
                                </BarBrand>
                                <BarMenu>
                                    <BarStart>
                                        <BarItem>
                                            <BarLink To="/admin/alerts">
                                                <BarIcon IconName="IconName.ExclamationCircle"  />
                                                Alerts/Notes
                                            </BarLink>
                                        </BarItem>
                                            @if (!isContentAdmin)
                                            {
                                                <BarItem>
                                                    <BarLink To="/admin/users">
                                                        <BarIcon IconName="IconName.Users" />
                                                        Users
                                                    </BarLink>
                                                </BarItem>
                                                <BarItem>
                                                    <BarLink To="/admin/roles">
                                                        <BarIcon IconName="IconName.Coffee" />
                                                        Roles
                                                    </BarLink>
                                                </BarItem>
                                                <BarItem>
                                                    <BarLink To="/admin/groups">
                                                        <BarIcon IconName="IconName.PuzzlePiece" />
                                                        Groups
                                                    </BarLink>
                                                </BarItem>
                                                <BarItem>
                                                    <BarLink To="/admin/dashboards">
                                                <BarIcon IconName="IconName.ChartPie" />
                                                Dashboards
                                            </BarLink>
                                        </BarItem>
                                        }
                                    </BarStart>
                                </BarMenu>
                            </Bar>
                        </Div>
                    </LayoutSiderContent>
                </LayoutSider>
                <Layout>
                    <LayoutContent Class="mt-2 ms-4 me-2">
                        @Body
                    </LayoutContent>
                </Layout>
            </Layout>
            <LayoutFooter>
                <Footer />
            </LayoutFooter>
        </Layout>
        </Div>
    </Authorized>
    <NotAuthorized>
        <NotFound />
    </NotAuthorized>

</AuthorizeView>

@code {
    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] private IUserService userService { get; set; } = null!;

    public bool isContentAdmin { get; set; }
    private int iconHeight = 30;

    protected override async Task OnInitializedAsync()
    {
       
    }
    
    private string GetHeaderColor()
    {
        string color = configuration.GetValue<string>("System:SystemColor");
        return "background-color:" + color + ";";
    }

    Task OnButtonClicked()
    {
        int userId = Convert.ToInt32(httpContextAccessor.HttpContext.User.FindFirst(WRClaimType.UserId).Value);
        userService.SaveActivityLog(userId, WRActivityType.Logout);
        Navigation.NavigateTo($"Signout", true);

        return Task.CompletedTask;
    }
}
