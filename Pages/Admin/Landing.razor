@using TheradexPortal.Data.Static;

@layout AdminLayout
@page "/admin"
@inject IHttpContextAccessor httpContextAccessor

<Div Background="Background.Primary" TextColor="TextColor.Light" Class="p-1"><h2>Administration</h2></Div>
<Div Padding="Padding.Is2" Background="Background.Light">
<ListGroup Flush Padding="Padding.Is2">
    @if (CheckRole( new List<string> { "Super", "Content" }))
    {
        <ListGroupItem>
            <Div Padding="Padding.Is2">
                <Heading Size="HeadingSize.Is4">Alerts/Notes</Heading>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define Alerts and Notes for various areas of Web Reporting.</Paragraph>
            </Div>
        </ListGroupItem>
    }
        @if (CheckRole(new List<string> { "Super" }))
        {
        <ListGroupItem>
            <Div Padding="Padding.Is2">
                <Heading Size="HeadingSize.Is4">Users</Heading>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define User information such as First Name, Last Name, Active, etc.</Paragraph>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Users must be assigned a Primary role and any number of secondary roles.</Paragraph>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define Dashboards, Reports and Admin pages the user can access via Roles.</Paragraph>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define Study Groups and Individual Studies users can access.</Paragraph>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Administration roles are granted all Dashboards, Reports and Studies by default.</Paragraph>
            </Div>
        </ListGroupItem>
        <ListGroupItem>
            <Div Padding="Padding.Is2">
                <Heading Size="HeadingSize.Is4">Roles</Heading>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define access to Dashboards and Reports.</Paragraph>
            </Div>
        </ListGroupItem>
        <ListGroupItem>
            <Div Padding="Padding.Is2">
                <Heading Size="HeadingSize.Is4">Groups</Heading>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define access to Studies for a group.</Paragraph>
            </Div>
        </ListGroupItem>
        <ListGroupItem>
            <Div Padding="Padding.Is2">
                <Heading Size="HeadingSize.Is4">Dashboards</Heading>
                <Paragraph Margin="Margin.Is1.FromBottom.Is3.FromStart">Define Dashboards and Reports within each Dashboard.</Paragraph>
            </Div>
        </ListGroupItem>
    }
</ListGroup>
</Div>

@code {
    public bool isContentAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        isContentAdmin = httpContextAccessor.HttpContext.User.HasClaim(WRClaimType.IsContentAdmin, "True");
    }
   
    private bool CheckRole(List<string> allowedRoles)
    {
        bool roleFound = false;
        foreach (string allowedRole in allowedRoles)
        {
            if (httpContextAccessor.HttpContext.User.HasClaim(c => c.Type == "Admin-" + allowedRole))
                roleFound = true;
        }
        return roleFound;
    }
}
