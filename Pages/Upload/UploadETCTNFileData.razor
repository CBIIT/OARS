@using System.Diagnostics.CodeAnalysis
@using Microsoft.Extensions.Options
@using Newtonsoft.Json
@using TheradexPortal.Data.Models;
@using TheradexPortal.Data.Services.Abstract;
@using TheradexPortal.Data.Static;
@using TheradexPortal.Data.Models.Configuration;
@inject IHttpContextAccessor httpContextAccessor

<Modal @ref="ETCTNFileDataModal">
    <ModalContent Size="ModalSize.ExtraLarge">
        <ModalHeader Background="Background.Primary">
            <ModalTitle TextColor="TextColor.White">Overview</ModalTitle>
            <CloseButton TextColor="TextColor.White" />
        </ModalHeader>
        <ModalBody Class="upload-Modal-Body">
            <Div @bind-Visible="@receivingStatusVisible">
                <ReceivingStatusData IsAdminDisplay="@isAdminDisplay" RequestId="@requestIdToFetch"></ReceivingStatusData>
            </Div>            
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {

    private Modal ETCTNFileDataModal;
    private string requestIdToFetch = string.Empty;
    private bool isAdminDisplay = false;
    private bool receivingStatusVisible = false;

    public async Task Show(string requestId, string crf, bool isAdmin)
    {
        this.requestIdToFetch = requestId;
        this.isAdminDisplay = isAdmin;
        this.receivingStatusVisible = (crf == "RECEIVING_STATUS");

        StateHasChanged();

        ETCTNFileDataModal!.Show();
    }

    // private IFluentDisplay IsCRFInstructions(string crf)
    // {
    //     if (ETCTNUploadRequestModel.CRF == crf)
    //         return Display.Block;
    //     else
    //         return Display.None;
    // }
}